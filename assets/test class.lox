print("> classes");
class lox_class {}
print(lox_class);
print(lox_class());

print("> pairs");
class Pair {}

var pair = Pair();
pair.first = 1;
pair.second = 2;
print(pair.first + pair.second);

print("> methods");
class Scone {
	topping(first, second) {
		print("scone with " + first + " and " + second);
	}
}

var scone = Scone();
scone.topping("berries", "cream");

print("> this");
class Nested {
	method() {
		fun function() {
			print(this);
		}

		function();
	}
}
Nested().method();

print("> coffee");
class CoffeeMaker {
	init(coffee) {
		this.coffee = coffee;
	}

	brew() {
		print("Enjoy your cup of " + this.coffee);

		// No reusing the grounds!
		this.coffee = nil;
	}
}

var maker = CoffeeMaker("coffee and chicory");
maker.brew();

print("> oops");
class Oops {
	init() {
		this.name = "oops";
		var up = "local";
		fun f() {
			print("a closure inside " + this.name + " ; a local == " + up);
		}
		this.field = f;

		fun f2() {
			print("a function");
		}
		this.field2 = f2;
	}
}

var oops = Oops();
oops.field();
oops.field2();
